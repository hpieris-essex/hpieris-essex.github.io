"use strict";(self.webpackChunkessex_portfolio_ml=self.webpackChunkessex_portfolio_ml||[]).push([[3990],{8987:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var i=t(4848),o=t(8453);const s={},r="Code & Tasks",l={id:"unit-9/unit-9",title:"Code & Tasks",description:"CNN Architecture & Experimentation",source:"@site/docs/unit-9/unit-9.md",sourceDirName:"unit-9",slug:"/unit-9/",permalink:"/unit-9/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Reflection",permalink:"/unit-9/Reflection"},next:{title:"10. CNN Interactive Learning",permalink:"/category/10-cnn-interactive-learning"}},c={},a=[{value:"CNN Architecture &amp; Experimentation",id:"cnn-architecture--experimentation",level:3},{value:"Notebook",id:"notebook",level:3}];function h(e){const n={code:"code",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"code--tasks",children:"Code & Tasks"}),"\n",(0,i.jsx)(n.h3,{id:"cnn-architecture--experimentation",children:"CNN Architecture & Experimentation"}),"\n",(0,i.jsx)(n.p,{children:"Convolutional Neural Networks consist of layers that handle convolutional, pooling, and flattening. The CNN provided here follows the below architecture:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"First Convolutional Set:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A concolutional layer with 32 filters of size 4x4, applied to input images of size 32x32 with 3 channels (RGB), using ReLU activation."}),"\n",(0,i.jsx)(n.li,{children:"A max pool layer with a pool size of 2x2 to reduce the spatial dimensions."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Second Convolutional Set:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A second concolutional layer similar to the first one."}),"\n",(0,i.jsx)(n.li,{children:"Followed by a max pool layer with a pool size of 2x2, similar to the first set."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Flattening:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A Flatten layer to convert the 2D feature maps into a 1D vector, preparing the data for the dense layer."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Dense Layers:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A Dense layer with 256 neurons and ReLU activation for further processing."}),"\n",(0,i.jsx)(n.li,{children:"The final Dense layer with 10 neurons and softmax activation, designed for classification into 10 distinct classes as the CIFAR-10 dataset has 10 classes."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The model uses categorical crossentropy as the loss function and uses Adam as the optimizer."}),"\n",(0,i.jsx)(n.h3,{id:"notebook",children:"Notebook"}),"\n",(0,i.jsx)("a",{href:"https://github.com/hpieris-essex/hpieris-essex.github.io/blob/ml-module/docs/unit-9/CNN_Object_Recognition.ipynb",target:"_blank",children:"Jupyter Notebook: CNN Object Recognition"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(n.p,{children:["Changing the input image value here ( ",(0,i.jsx)(n.code,{children:"plt.imshow(x_test[image_id])"}),"), appears to correctly predict the class."]}),"\n",(0,i.jsx)(n.p,{children:"e.g."}),"\n",(0,i.jsx)(n.p,{children:"4 - frog\n2 - ship\n1 - ship"})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(6540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);