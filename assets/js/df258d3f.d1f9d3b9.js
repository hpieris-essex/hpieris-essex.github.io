"use strict";(self.webpackChunkessex_portfolio_ml=self.webpackChunkessex_portfolio_ml||[]).push([[6965],{5791:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(4848),o=n(8453);const i={},a="Introduction to Artificial Neural Networks (ANNs)",l={id:"unit-7/unit-7",title:"Introduction to Artificial Neural Networks (ANNs)",description:"A perceptron is a single-layer neural network and the simplest form of an artificial neural network (ANN). It computes a weighted sum of its input features and applies a threshold function to determine the output.",source:"@site/docs/unit-7/unit-7.md",sourceDirName:"unit-7",slug:"/unit-7/",permalink:"/unit-7/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Reflection",permalink:"/unit-7/Reflection"},next:{title:"8. Training an Artificial Neural Network",permalink:"/category/8-training-an-artificial-neural-network"}},s={},c=[{value:"A Simple Perceptron",id:"a-simple-perceptron",level:3},{value:"Perceptron and Operator",id:"perceptron-and-operator",level:3},{value:"Multi-Layer Perceptron",id:"multi-layer-perceptron",level:3}];function p(e){const t={h1:"h1",h3:"h3",p:"p",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"introduction-to-artificial-neural-networks-anns",children:"Introduction to Artificial Neural Networks (ANNs)"}),"\n",(0,r.jsx)(t.p,{children:"A perceptron is a single-layer neural network and the simplest form of an artificial neural network (ANN). It computes a weighted sum of its input features and applies a threshold function to determine the output."}),"\n",(0,r.jsx)(t.p,{children:"An activation function in a perceptron acts as an operator that decides whether a neuron should be activated or not based on the weighted sum of the inputs."}),"\n",(0,r.jsx)(t.p,{children:"A Multilayer Perceptron consists of multiple layers of perceptrons, including input, hidden, and output layers, enabling it to model complex nonlinear relationships through backpropagation."}),"\n",(0,r.jsx)(t.h3,{id:"a-simple-perceptron",children:"A Simple Perceptron"}),"\n",(0,r.jsx)("a",{href:"https://colab.research.google.com/drive/19hVjul7m6v0BKl8as8cMO4czjFKekhMj",target:"_blank",children:"Colab Notebook: A Simple Perceptron"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.h3,{id:"perceptron-and-operator",children:"Perceptron and Operator"}),"\n",(0,r.jsx)("a",{href:"https://colab.research.google.com/drive/1ex8LSzKx4lRHQFgHSW60rHcQQg2jXGye",target:"_blank",children:"Colab Notebook: Perceptron and Operator"}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.h3,{id:"multi-layer-perceptron",children:"Multi-Layer Perceptron"}),"\n",(0,r.jsx)("a",{href:"https://colab.research.google.com/drive/1auytNVdPQFiFn_evsGpLOZfsvTWMp8q0",target:"_blank",children:"Colab Notebook: Multi-Layer Perceptron"}),"\n",(0,r.jsx)("br",{})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var r=n(6540);const o={},i=r.createContext(o);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);